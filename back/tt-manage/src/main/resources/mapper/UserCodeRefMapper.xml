<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tt.manage.mapper.UserCodeRefMapper">
    <resultMap id="BaseResultMap" type="com.tt.manage.entity.UserCodeRef">
        <id column="user_id" property="userId" jdbcType="VARCHAR"/>
        <result column="code" property="code" jdbcType="BIGINT"/>
        <result column="user_name" property="userName" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="draw_num" property="drawNum" jdbcType="INTEGER"/>
        <result column="reward" property="reward" jdbcType="BIGINT"/>
    </resultMap>
    <sql id="Base_Column_List">
    user_id, code, create_time, update_time, draw_num, reward
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from user_code_ref
        where user_id = #{userId,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from user_code_ref
    where user_id = #{userId,jdbcType=VARCHAR}
  </delete>
    <insert id="insert" parameterType="com.tt.manage.entity.UserCodeRef">
    insert into user_code_ref (user_id, code, create_time, 
      update_time, draw_num, reward)
    values (#{userId,jdbcType=VARCHAR}, #{code,jdbcType=BIGINT}, now(),
      now(), #{drawNum,jdbcType=INTEGER}, #{reward,jdbcType=BIGINT})
  </insert>
    <insert id="insertSelective" parameterType="com.tt.manage.entity.UserCodeRef">
        insert into user_code_ref
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                user_id,
            </if>
            <if test="code != null">
                code,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="drawNum != null">
                draw_num,
            </if>
            <if test="reward != null">
                reward,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                #{userId,jdbcType=VARCHAR},
            </if>
            <if test="code != null">
                #{code,jdbcType=BIGINT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="drawNum != null">
                #{drawNum,jdbcType=INTEGER},
            </if>
            <if test="reward != null">
                #{reward,jdbcType=BIGINT},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.tt.manage.entity.UserCodeRef">
        update user_code_ref
        <set>
            <if test="code != null">
                code = #{code,jdbcType=BIGINT},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="drawNum != null">
                draw_num = #{drawNum,jdbcType=INTEGER},
            </if>
            <if test="reward != null">
                reward = #{reward,jdbcType=BIGINT},
            </if>
        </set>
        where user_id = #{userId,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.tt.manage.entity.UserCodeRef">
    update user_code_ref
    set code = #{code,jdbcType=BIGINT},
      update_time = now(),
      reward = #{reward,jdbcType=BIGINT},
      draw_num = #{drawNum,jdbcType=INTEGER}
    where user_id = #{userId,jdbcType=VARCHAR}
  </update>

    <insert id="addUserCodeRefs" parameterType="java.util.ArrayList">

        insert into user_code_ref (user_id, code, create_time,
        update_time, draw_num, reward)
        values
        <foreach collection="list" item="item" index="index" separator=",">

            (#{item.userId,jdbcType=VARCHAR}, #{item.code,jdbcType=BIGINT}, now(),
            now(), #{item.drawNum,jdbcType=INTEGER}, #{item.reward,jdbcType=BIGINT})

        </foreach>

    </insert>

    <select id="selectUserCodeRefList" parameterType="com.tt.manage.entity.UserCodeRef" resultMap="BaseResultMap">

        select
        ref.user_id, ref.code, ref.create_time, ref.update_time, ref.draw_num,
        info.user_name, ref.reward
        from user_code_ref ref left join user_info info
        on ref.user_id = info.user_id
        <where>
            <if test="isVip != null and isVip==0 ">
                info.is_vip is null or info.is_vip != 1
            </if>
            <if test="isVip != null and isVip==1 ">
                info.is_vip =1
            </if>
        </where>
        order by update_time desc

    </select>

</mapper>