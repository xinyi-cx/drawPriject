<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tt.manage.mapper.SystemUserMapper">
    <resultMap id="BaseResultMap" type="com.tt.manage.entity.SystemUser">
        <id column="user_id" property="userId" jdbcType="INTEGER"/>
        <result column="user_name" property="userName" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
    </resultMap>
    <sql id="Base_Column_List">
    user_id, user_name, password, create_time, update_time
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="com.tt.manage.entity.SystemUser">
        select
        <include refid="Base_Column_List"/>
        from system_user
        <where>
            <if test="userName != null and userName !='' ">
                and user_name = #{userName,jdbcType=VARCHAR}
            </if>
            <if test="userId != null">
                and user_id = #{userId,jdbcType=INTEGER}
            </if>
        </where>
        limit 1
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from system_user
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.tt.manage.entity.SystemUser">
    insert into system_user (user_name, password,
      create_time, update_time)
    values (#{userName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
      now(), now())
  </insert>
    <insert id="insertSelective" parameterType="com.tt.manage.entity.SystemUser">
        insert into system_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                user_id,
            </if>
            <if test="userName != null">
                user_name,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="userName != null">
                #{userName,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.tt.manage.entity.SystemUser">
        update system_user
        <set>
            <if test="userName != null">
                user_name = #{userName,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                update_time = now(),
            </if>
        </set>
        where user_id = #{userId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.tt.manage.entity.SystemUser">
    update system_user
    set user_name = #{userName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      update_time = now()
    where user_id = #{userId,jdbcType=INTEGER}
  </update>

    <select id="selectSystemUserList" parameterType="com.tt.manage.entity.SystemUser" resultMap="BaseResultMap">

        select
        <include refid="Base_Column_List"/>
        from system_user
        <where>
            <if test="userId != null">
                and user_id = #{userId,jdbcType=INTEGER}
            </if>
            <if test="userName != null and userName != ''">
                and user_name = like concat('%', #{userName}, '%')
            </if>
            <if test="createTime != null">
                and create_time = #{createTime,jdbcType=TIMESTAMP}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime,jdbcType=TIMESTAMP}
            </if>
        </where>
        order by create_time desc

    </select>


</mapper>