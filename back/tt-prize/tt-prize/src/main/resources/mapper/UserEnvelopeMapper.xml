<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tt.prize.mapper.UserEnvelopeMapper">
    
    <resultMap type="com.tt.base.entity.UserEnvelope" id="UserEnvelopeResult">
        <result property="userId"    column="user_id"    />
        <result property="userName"    column="user_name"    />
        <result property="envelopeNum"    column="envelope_num"    />
        <result property="moneyRange"    column="money_range"    />
        <result property="prize"    column="prize"    />
        <result property="uploadTime"    column="upload_time"    />
        <result property="status"    column="status"    />
    </resultMap>
	
	<sql id="selectUserEnvelopeVo">
        select  user_id, user_name, envelope_num, money_range, prize, upload_time, status from user_envelope
    </sql>
	
    <select id="selectUserEnvelopeList" parameterType="com.tt.base.entity.UserEnvelope" resultMap="UserEnvelopeResult">
        <include refid="selectUserEnvelopeVo"/>
        <where>  
            <if test="userId != null "> and user_id = #{userId}</if>
             <if test="userName != null  and userName != '' "> and user_name = #{userName}</if>
             <if test="envelopeNum != null "> and envelope_num = #{envelopeNum}</if>
             <if test="moneyRange != null "> and money_range = #{moneyRange}</if>
             <if test="prize != null  and prize != '' "> and prize = #{prize}</if>
             <if test="uploadTime != null "> and upload_time = #{uploadTime}</if>
             <if test="status != null  and status != '' "> and status = #{status}</if>
         </where>
    </select>
    
    <select id="selectUserEnvelopeById" parameterType="com.tt.base.entity.UserEnvelope" resultMap="UserEnvelopeResult">
        <include refid="selectUserEnvelopeVo"/>
               <where>  
 			user_id = #{userId}
        </where>
    </select>
        
    <insert id="insertUserEnvelope" parameterType="com.tt.base.entity.UserEnvelope">
        insert into user_envelope
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="userId != null  ">user_id,</if>
			<if test="userName != null  and userName != ''  ">user_name,</if>
			<if test="envelopeNum != null  ">envelope_num,</if>
			<if test="moneyRange != null  ">money_range,</if>
			<if test="prize != null  and prize != ''  ">prize,</if>
			<if test="uploadTime != null  ">upload_time,</if>
			<if test="status != null  and status != ''  ">status,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="userId != null  ">#{userId},</if>			
			<if test="userName != null  and userName != ''  ">#{userName},</if>			
			<if test="envelopeNum != null  ">#{envelopeNum},</if>			
			<if test="moneyRange != null  ">#{moneyRange},</if>			
			<if test="prize != null  and prize != ''  ">#{prize},</if>			
			<if test="uploadTime != null  ">#{uploadTime},</if>
			<if test="status != null  and status != ''  ">#{status},</if>			
         </trim>
    </insert>
	 
    <update id="updateUserEnvelope" parameterType="com.tt.base.entity.UserEnvelope">
        update user_envelope
        <trim prefix="SET" suffixOverrides=",">
        
				            <if test="userName != null  and userName != ''  ">user_name = #{userName},</if>
				            <if test="envelopeNum != null  ">envelope_num = #{envelopeNum},</if>
				            <if test="moneyRange != null  ">money_range = #{moneyRange},</if>
				            <if test="prize != null  and prize != ''  ">prize = #{prize},</if>
				            <if test="uploadTime != null  ">upload_time = #{uploadTime},</if>
				            <if test="status != null  and status != ''  ">status = #{status},</if>
		        </trim>
        where user_id = #{userId}
    </update>

	<delete id="deleteUserEnvelopeById" parameterType="Integer">
        delete from user_envelope where user_id = #{userId}
    </delete>
	
    <delete id="deleteUserEnvelopeByIds" parameterType="String">
        delete from user_envelope where user_id in 
        <foreach item="userId" collection="array" open="(" separator="," close=")">
            #{userId}
        </foreach>
    </delete>
    
</mapper>